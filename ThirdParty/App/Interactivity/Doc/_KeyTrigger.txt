.. -*- mode: rst; encoding: utf-8 -*-

.. meta::
   :description: A Trigger that is triggered by a keyboard event. If *Key* and *Modifiers* are detected, it fires.

================
KeyTrigger Class
================
---------------------------------------------------------------------------
namespace `NoesisApp <Gui.Core._ClassHierarchy.html#noesisapp-namespace>`__
---------------------------------------------------------------------------

A `Trigger <Gui.Core._Trigger.html>`_ that is triggered by a keyboard event. If *Key* and *Modifiers* are detected, it fires. 

.. code-block:: xml 

   <UserControl
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
     xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions">
     <i:Interaction.Triggers>
       <ei:KeyTrigger FiredOn="KeyDown" Key="Escape">
         <i:InvokeCommandAction Command="{Binding ExitCommand}" />
       </ei:KeyTrigger>
     <i:Interaction.Triggers>
     ...
   </UserControl>



Inheritance Hierarchy
=====================

.. |bullet| unicode:: U+2022 .. Circular Bullet
.. |INDEX| image:: icon_index.png
   :align: middle

|  |bullet| `DispatcherObject <Gui.DependencySystem._DispatcherObject.html>`__
|   |bullet| `DependencyObject <Gui.DependencySystem._DependencyObject.html>`__
|    |bullet| `Freezable <Gui.DependencySystem._Freezable.html>`__
|     |bullet| `Animatable <Gui.Core._Animatable.html>`__
|      |bullet| `AttachableObject <App.Interactivity._AttachableObject.html>`__
|       |bullet| `TriggerBase <App.Interactivity._TriggerBase.html>`__
|        |bullet| `TriggerBaseT <App.Interactivity._TriggerBaseT.html>`__
|         |bullet| *KeyTrigger*


|INDEX| `Class Hierarchy Index <Gui.Core._ClassHierarchy.html>`__


Methods
=======

From `TriggerBase <App.Interactivity._TriggerBase.html>`__
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. table::
  :widths: 25 75
  :width: 100%

  ================================================== ================================================================================================================================================================
  Name                                               Description                                                                                                                                                     
  ================================================== ================================================================================================================================================================
  *PreviewInvoke*                                    Raised just before invoking all associated actions                                                                                                              
  ================================================== ================================================================================================================================================================

From `AttachableObject <App.Interactivity._AttachableObject.html>`__
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. table::
  :widths: 25 75
  :width: 100%

  ================================================== ================================================================================================================================================================
  Name                                               Description                                                                                                                                                     
  ================================================== ================================================================================================================================================================
  *Attach*                                           Attaches to the specified object                                                                                                                                
  *Detach*                                           Detaches this instance from its associated object                                                                                                               
  ================================================== ================================================================================================================================================================

From `Freezable <Gui.DependencySystem._Freezable.html>`__
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. table::
  :widths: 25 75
  :width: 100%

  ================================================== ================================================================================================================================================================
  Name                                               Description                                                                                                                                                     
  ================================================== ================================================================================================================================================================
  *CanFreeze*                                        Gets a value that indicates whether the object can be made unmodifiable.                                                                                        
  *CanSeal*                                          Indicates if the current instance can be sealed                                                                                                                 
  *Clone*                                            Creates a modifiable clone of the `Freezable <Gui.DependencySystem._Freezable.html>`_, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values. The cloned Freezable::IsFrozen property is false even if the source's IsFrozen property is true. 
  *CloneCurrentValue*                                Creates a modifiable clone (deep copy) of the `Freezable <Gui.DependencySystem._Freezable.html>`_ using its current values. The cloned object's IsFrozen property is false even if the source's IsFrozen property is true. 
  *Freeze*                                           Makes the current object unmodifiable and sets its IsFrozen property to true.                                                                                   
  *GetAsFrozen*                                      Creates a frozen copy of the `Freezable <Gui.DependencySystem._Freezable.html>`_, using base (non-animated) property values. Because the copy is frozen, any frozen sub-objects are copied by reference. The copy's IsFrozen property is set to true. Throws if the `Freezable <Gui.DependencySystem._Freezable.html>`_ cannot be frozen because it contains expressions or animated properties. 
  *GetCurrentValueAsFrozen*                          Creates a frozen copy of the `Freezable <Gui.DependencySystem._Freezable.html>`_ using current property values. Because the copy is frozen, any frozen sub-objects are copied by reference. The copy's IsFrozen property is set to true. 
  *IsFrozen*                                          Gets a value that indicates whether the object is currently modifiable.                                                                                        
  *Seal*                                             Seals the current instance                                                                                                                                      
  ================================================== ================================================================================================================================================================

From `DependencyObject <Gui.DependencySystem._DependencyObject.html>`__
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. table::
  :widths: 25 75
  :width: 100%

  ================================================== ================================================================================================================================================================
  Name                                               Description                                                                                                                                                     
  ================================================== ================================================================================================================================================================
  *ClearAnimation*                                   Clears the animation value of a property                                                                                                                        
  *ClearAnimation*                                   Clears the animation value of a property                                                                                                                        
  *ClearLocalValue*                                  Clears the local value of a property The property to be cleared is specified by a `DependencyProperty <Gui.DependencySystem._DependencyProperty.html>`_ identifier 
  *CoerceValue*                                      Coerces and validates the effective property value                                                                                                              
  *CoerceValue*                                      Coerces and validates the effective property value                                                                                                              
  *DependencyPropertyChanged*                        Returns the PropertyChanged event                                                                                                                               
  *Destroyed*                                        Destroyed delegate is raised when object is going to be destroyed                                                                                               
  *GetBaseValue*                                     Returns the base value without animation nor coerce (this never returns `Expression <Gui.DependencySystem._Expression.html>`_ like GetLocalValue)               
  *GetExpression*                                    Gets the expression, if any, used to evaluate the specified property value                                                                                      
  *GetLocalValue*                                    Returns the local value of a dependency property, if it exists                                                                                                  
  *GetValue*                                         Returns the current effective value of a dependency property on this instance of a `DependencyObject <Gui.DependencySystem._DependencyObject.html>`_            
  *GetValueObject*                                   Returns the current effective value of a dependency property on this instance of a `DependencyObject <Gui.DependencySystem._DependencyObject.html>`_ as a boxed value 
  *GetValueProvider*                                 Gets the provider that returns the effective value for the specified dependency property                                                                        
  *HasAnimatedProperties*                            Returns true if there is any animated property                                                                                                                  
  *InvalidateProperty*                               Re-evaluates the effective value for the specified dependency property if necessary If null is passed, a full re-evaluation could be needed                     
  *IsCached*                                         Returns if the value is stored in the cache. If true, the priority is returned in the provider field                                                            
  *IsSealed*                                         Gets a value that indicates whether this instance is currently sealed (read-only)                                                                               
  *SetAnimation*                                     Sets the animated value of a property                                                                                                                           
  *SetCurrentValue*                                  Sets the current value of a dependency property. The current value is set on the coerce field, without modifying source or animated value                       
  *SetCurrentValueObject*                            Sets the current value of a dependency property using a boxed value                                                                                             
  *SetExpression*                                    Sets the expression to be evaluated dynamically to obtain the value of the property                                                                             
  *SetValue*                                         Sets the local value of a dependency property                                                                                                                   
  *SetValueObject*                                   Sets the local value (boxed) of a dependency property                                                                                                           
  ================================================== ================================================================================================================================================================

From `DispatcherObject <Gui.DependencySystem._DispatcherObject.html>`__
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. table::
  :widths: 25 75
  :width: 100%

  ================================================== ================================================================================================================================================================
  Name                                               Description                                                                                                                                                     
  ================================================== ================================================================================================================================================================
  *CheckAccess*                                      Determines whether the calling thread has access to this `DispatcherObject <Gui.DependencySystem._DispatcherObject.html>`_                                      
  *VerifyAccess*                                     Enforces that the calling thread has access to this `DispatcherObject <Gui.DependencySystem._DispatcherObject.html>`_                                           
  ================================================== ================================================================================================================================================================



Properties
==========

.. |DP| image:: icon_dp.png
   :align: middle
.. |RO| image:: icon_ro.png
   :align: middle
.. |DP_RO| image:: icon_dp-ro.png
   :align: middle
.. |None| image:: icon_none.png
   :align: middle
.. |DP_| image:: icon_dp_.png
   :align: middle
.. |RO_| image:: icon_ro_.png
   :align: middle
.. |nbsp| unicode:: 0xA0
   :trim:

.. table::
  :widths: 5 20 75
  :width: 100%

  ========== ================================================== ======================================================================================================================================================
  |          Name                                               Description                                                                                                                                           
  ========== ================================================== ======================================================================================================================================================
  |DP|       *ActiveOnFocus*                                    If true, the `Trigger <Gui.Core._Trigger.html>`_ only listens to its trigger Source object, which means that element must have focus for the trigger to fire. If false, the `Trigger <Gui.Core._Trigger.html>`_ listens at the root, so any unhandled KeyDown/Up messages will be caught 
  |DP|       *FiredOn*                                          Determines whether or not to listen to the KeyDown or KeyUp event                                                                                     
  |DP|       *Key*                                              The key that must be pressed for the trigger to fire                                                                                                  
  |DP|       *Modifiers*                                        The modifiers that must be active for the trigger to fire                                                                                             
  ========== ================================================== ======================================================================================================================================================

.. class:: legend

  |DP_| Dependency Property |nbsp| |nbsp| |nbsp| |nbsp| |nbsp| |nbsp| |RO_| Read-only

|

From `TriggerBase <App.Interactivity._TriggerBase.html>`__
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. table::
  :widths: 5 20 75
  :width: 100%

  ========== ================================================== ======================================================================================================================================================
  |          Name                                               Description                                                                                                                                           
  ========== ================================================== ======================================================================================================================================================
  |DP_RO|    *Actions*                                          Gets the actions associated with this trigger                                                                                                         
  ========== ================================================== ======================================================================================================================================================

.. class:: legend

  |DP_| Dependency Property |nbsp| |nbsp| |nbsp| |nbsp| |nbsp| |nbsp| |RO_| Read-only

From `DispatcherObject <Gui.DependencySystem._DispatcherObject.html>`__
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. table::
  :widths: 5 20 75
  :width: 100%

  ========== ================================================== ======================================================================================================================================================
  |          Name                                               Description                                                                                                                                           
  ========== ================================================== ======================================================================================================================================================
  |RO|       *ThreadId*                                         Gets the thread this `DispatcherObject <Gui.DependencySystem._DispatcherObject.html>`_ is associated with                                             
  ========== ================================================== ======================================================================================================================================================

.. class:: legend

  |DP_| Dependency Property |nbsp| |nbsp| |nbsp| |nbsp| |nbsp| |nbsp| |RO_| Read-only



Events
======


.. |R| image:: ev_r-icon.png
   :align: middle
.. |N| image:: ev_nr-icon.png
   :align: middle
.. |D| image:: ev_d-icon.png
   :align: middle

KeyTrigger has no events

